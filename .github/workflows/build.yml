name: Build
on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Setup | Ubuntu dependencies
        run: sudo apt install libasound2-dev libudev-dev pkg-config

      - name: Lint | Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets -- -D warnings
        permissions:
          checks: write

      - name: Lint | Rustfmt
        run: cargo fmt -- --check

  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        include:
          - os: ubuntu-latest
            output: emitter-x86_64-linux.tar.gz
          - os: macos-latest
            output: emitter-x86_64-macos.tar.gz
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Setup | Ubuntu dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install libasound2-dev libudev-dev pkg-config

      - name: Setup | macOS dependencies
        if: matrix.os == 'macos-latest'
        run: brew install llvm

      - name: Build
        run: cargo build --release --no-default-features

      - name: Artifact | Prepare
        if: matrix.os != 'windows-latest'
        run: |
          cd target/release
          mv emitter ../../
          cd -
          tar cvzf ${{ matrix.output }} assets/ emitter

      - name: Artifact | Upload
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.output }}
          path: ${{ matrix.output }}

  # build-wasm:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Setup | Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup | Trunk
  #       uses: jetli/trunk-action@v0.4.0
  #       with:
  #         version: "latest"

  #     - name: Build | Trunk
  #       run: |
  #         cd launchers/wasm
  #         trunk build

  #     - name: Post Setup | Upload dist
  #       uses: actions/upload-artifact@v3
  #       with:
  #         path: ./launchers/wasm/dist/

  # docker-wasm:
  #   needs: build-wasm
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Setup | Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup | Download dist
  #       uses: actions/download-artifact@v3

  #     - name: Setup | Place dist
  #       run: mv ./artifact ./launchers/wasm/dist

  #     - name: Setup | Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Setup | Build Docker Image
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: ./launchers/wasm
  #         push: false

  test:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v4

      - name: Setup | Ubuntu dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install libasound2-dev libudev-dev pkg-config

      - name: Test
        run: cargo test
